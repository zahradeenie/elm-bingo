var _user$project$Bingo$viewFooter = A2(
	_elm_lang$html$Html$footer,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$a,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$href('https://github.com/zahradeenie'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Made by Zahra'),
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	});
var _user$project$Bingo$viewHeader = function (title) {
	return A2(
		_elm_lang$html$Html$header,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(title),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Bingo$playerInfo = F2(
	function (name, gameNumber) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			name,
			A2(
				_elm_lang$core$Basics_ops['++'],
				' - Game #',
				_elm_lang$core$Basics$toString(gameNumber)));
	});
var _user$project$Bingo$viewPlayer = F2(
	function (name, gameNumber) {
		var playerInfoText = _elm_lang$html$Html$text(
			_elm_lang$core$String$toUpper(
				A2(_user$project$Bingo$playerInfo, name, gameNumber)));
		return A2(
			_elm_lang$html$Html$h2,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('info'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('classy'),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: playerInfoText,
				_1: {ctor: '[]'}
			});
	});
var _user$project$Bingo$Model = F3(
	function (a, b, c) {
		return {name: a, gameNumber: b, entries: c};
	});
var _user$project$Bingo$Entry = F4(
	function (a, b, c, d) {
		return {id: a, phrase: b, points: c, marked: d};
	});
var _user$project$Bingo$initialEntries = {
	ctor: '::',
	_0: A4(_user$project$Bingo$Entry, 4, 'Rock-Star Ninja', 400, false),
	_1: {
		ctor: '::',
		_0: A4(_user$project$Bingo$Entry, 1, 'Future-Proof', 100, false),
		_1: {
			ctor: '::',
			_0: A4(_user$project$Bingo$Entry, 3, 'In The Cloud', 300, false),
			_1: {
				ctor: '::',
				_0: A4(_user$project$Bingo$Entry, 2, 'Doing Agile', 200, false),
				_1: {ctor: '[]'}
			}
		}
	}
};
var _user$project$Bingo$initialModel = {name: 'Zahra', gameNumber: 1, entries: _user$project$Bingo$initialEntries};
var _user$project$Bingo$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'NewGame':
				return _elm_lang$core$Native_Utils.update(
					model,
					{gameNumber: model.gameNumber + 1, entries: _user$project$Bingo$initialEntries});
			case 'Mark':
				var markEntry = function (e) {
					return _elm_lang$core$Native_Utils.eq(e.id, _p0._0) ? _elm_lang$core$Native_Utils.update(
						e,
						{marked: !e.marked}) : e;
				};
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						entries: A2(_elm_lang$core$List$map, markEntry, model.entries)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						entries: A2(
							_elm_lang$core$List$sortBy,
							function (_) {
								return _.points;
							},
							model.entries)
					});
		}
	});
var _user$project$Bingo$Sort = {ctor: 'Sort'};
var _user$project$Bingo$Mark = function (a) {
	return {ctor: 'Mark', _0: a};
};
var _user$project$Bingo$viewEntryItem = function (entry) {
	return A2(
		_elm_lang$html$Html$li,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$classList(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'marked', _1: entry.marked},
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					_user$project$Bingo$Mark(entry.id)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('phrase'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(entry.phrase),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$span,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('points'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(entry.points)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Bingo$viewEntryList = function (entries) {
	var listOfEntries = A2(_elm_lang$core$List$map, _user$project$Bingo$viewEntryItem, entries);
	return A2(
		_elm_lang$html$Html$ul,
		{ctor: '[]'},
		listOfEntries);
};
var _user$project$Bingo$NewGame = {ctor: 'NewGame'};
var _user$project$Bingo$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('content'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Bingo$viewHeader('Buzzword Bingo'),
			_1: {
				ctor: '::',
				_0: A2(_user$project$Bingo$viewPlayer, model.name, model.gameNumber),
				_1: {
					ctor: '::',
					_0: _user$project$Bingo$viewEntryList(model.entries),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('button-group'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$Bingo$NewGame),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('New Game'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('debug'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										_elm_lang$core$Basics$toString(model)),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: _user$project$Bingo$viewFooter,
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Bingo$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Bingo$initialModel, view: _user$project$Bingo$view, update: _user$project$Bingo$update})();
